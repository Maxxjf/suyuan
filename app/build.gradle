apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.qcloud.suyuan"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }

        ndk {
            moduleName "serial_port"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        key {
            keyAlias 'suyuan'
            keyPassword 'qcloud'
            storeFile file('suyuan.jks')
            storePassword 'qcloud'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            signingConfig signingConfigs.key
        }
        release {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.key
        }
    }
    task nativeLibsToJar(type: Zip, description: "create a jar archive of the native libs") {
        destinationDir file("$projectDir/libs")
        baseName "Native_Libs"
        extension "jar"
        from fileTree(dir: "libs", include: "**/*.so")
        into "lib"
    }
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn(nativeLibsToJar)
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []
        }
    }
    packagingOptions {
        pickFirst 'META-INF/*'
    }
    lintOptions {
        disable 'InconsistentArrays', 'OldTargetApi', 'GradleOverrides', 'MissingTranslation', 'UnusedResources', 'GoogleAppIndexingWarning', 'ResourceType'
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "suyuan-${releaseTime()}-V${variant.versionName}.apk"
        }
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMddhhmm", TimeZone.getTimeZone("UTC"))
}

realm {
    kotlinExtensionsEnabled = true
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    implementation project(':qcloudLib-kotlin:qclib')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"
    // sdk15, sdk19, sdk21, sdk23 are also available
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    implementation "org.jetbrains.anko:anko-support-v4:$anko_version"
    // 解决Android 5.0以下的方法超限
    implementation 'com.android.support:multidex:1.0.3'
    // 第三方crash异常捕捉
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'
    // 二维码/条形码
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    // 身份证识别器
    implementation files('libs/IDNRSocket V1.26.jar')
    implementation files('libs/Native_Libs.jar')
    //日期选择器
    compile 'com.haibin:calendarview:3.2.8'
}
